{"version":3,"sources":["reducers/TodoReducer.js","actions/actionsTypes.js","reducers/MainReducer.js","containers/CreateTodo.js","actions/actionCreator.js","containers/Table.js","App.js","registerServiceWorker.js","index.js"],"names":["INITIAL_DATA","TodoReducer","state","arguments","length","undefined","action","type","concat","Object","toConsumableArray","todo","map","id","objectSpread","completed","numIndex","parseInt","filter","combineReducers","todos","CreateTodo","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","text","username","email","onChangeTodoText","bind","assertThisInitialized","_this2","axios","then","response","addTodo","data","message","tasks","console","log","e","target","name","value","setState","preventDefault","_this3","react_default","a","createElement","onSubmit","handleSubmit","className","onChange","onClick","style","marginRight","Component","connect","Table","marginTop","scope","key","textDecoration","deleteTodo","color","fontSize","toggleTodo","role","App","containers_CreateTodo","containers_Table","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","store","createStore","MainReducer","ReactDOM","render","es","src_App","document","getElementById","URL","process","origin","addEventListener","fetch","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.70fb750b.chunk.js","sourcesContent":["import {ADD_TODO, REMOVE_TODO, TOGGLE_TODO} from '../actions/actionsTypes'\r\n\r\nconst INITIAL_DATA = [];\r\n\r\nconst TodoReducer = (state = INITIAL_DATA, action) => {\r\n\t switch (action.type) {\r\n\t\t\tcase ADD_TODO:\r\n\t\t\t\t return [...state, ...action.todo]\r\n\t\t\tcase TOGGLE_TODO:\r\n\t\t\t\t return state.map(todo =>\r\n\t\t\t\t\t (todo.id === action.id) ?\r\n\t\t\t\t\t\t {...todo, completed: !todo.completed} :\r\n\t\t\t\t\t\t todo\r\n\t\t\t\t );\r\n\t\t\tcase REMOVE_TODO:\r\n\t\t\t\t const numIndex = parseInt(action.id);\r\n\t\t\t\t return state.filter(todo => todo.id !== numIndex);\r\n\t\t\tdefault:\r\n\t\t\t\t return state\r\n\t }\r\n};\r\n\r\nexport default TodoReducer","export const ADD_TODO = 'ADD_TODO';\r\nexport const TOGGLE_TODO = 'TOGGLE_TODO';\r\nexport const REMOVE_TODO = 'REMOVE_TODO';","import { combineReducers } from 'redux'\r\nimport todos from './TodoReducer'\r\n\r\nexport default combineReducers({todos})","import React, {Component} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {addTodo} from '../actions/actionCreator'\r\nimport * as axios from \"axios\";\r\n\r\nclass CreateTodo extends Component {\r\n\t constructor(props) {\r\n\t\t\tsuper(props);\r\n\t\t\tthis.state = {\r\n\t\t\t\t text: '',\r\n\t\t\t\t username: '',\r\n\t\t\t\t email: ''\r\n\t\t\t};\r\n\t\t\tthis.onChangeTodoText = this.onChangeTodoText.bind(this)\r\n\t }\r\n\r\n\t componentDidMount() {\r\n\t\t\taxios.get('https://uxcandy.com/~shapoval/test-task-backend/v2/?developer=Pasha')\r\n\t\t\t.then(response => {\r\n\t\t\t\t this.props.addTodo(response.data.message.tasks);\r\n\t\t\t\t console.log(response.data.message.tasks)\r\n\t\t\t});\r\n\t }\r\n\r\n\t onChangeTodoText(e) {\r\n\t\t\tlet state = this.state;\r\n\t\t\tstate[e.target.name] = e.target.value;\r\n\t\t\tthis.setState(state);\r\n\t }\r\n\r\n\t handleSubmit(e) {\r\n\t\t\te.preventDefault();\r\n\t\t\tlet state = this.state;\r\n\t\t\tthis.props.addTodo([state]);\r\n\t\t\tthis.setState({text: \"\"})\r\n\t }\r\n\r\n\t render() {\r\n\t\t\treturn (\r\n\t\t\t\t<form onSubmit={this.handleSubmit.bind(this)}\r\n\t\t\t\t\t\t\tclassName=\"form-group\">\r\n\t\t\t\t\t <div className=\"col-sm-5\">\r\n\t\t\t\t\t\t\t<div className=\"input-group input-group-sm mb-3\">\r\n\t\t\t\t\t\t\t\t <div className=\"input-group-prepend\">\r\n\t\t\t\t\t\t\t\t\t\t<span className=\"input-group-text\" id=\"inputGroup-sizing-sm\">Email</span>\r\n\t\t\t\t\t\t\t\t </div>\r\n\t\t\t\t\t\t\t\t <input\r\n\t\t\t\t\t\t\t\t\t name='email'\r\n\t\t\t\t\t\t\t\t\t onChange={this.onChangeTodoText}\r\n\t\t\t\t\t\t\t\t\t value={this.state.email}\r\n\t\t\t\t\t\t\t\t\t type=\"text\"\r\n\t\t\t\t\t\t\t\t\t className=\"form-control\"/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"input-group input-group-sm mb-3\">\r\n\t\t\t\t\t\t\t\t <div className=\"input-group-prepend\">\r\n\t\t\t\t\t\t\t\t\t\t<span className=\"input-group-text\" id=\"inputGroup-sizing-sm\">User</span>\r\n\t\t\t\t\t\t\t\t </div>\r\n\t\t\t\t\t\t\t\t <input\r\n\t\t\t\t\t\t\t\t\t name='username'\r\n\t\t\t\t\t\t\t\t\t onChange={this.onChangeTodoText}\r\n\t\t\t\t\t\t\t\t\t value={this.state.username}\r\n\t\t\t\t\t\t\t\t\t type=\"text\"\r\n\t\t\t\t\t\t\t\t\t className=\"form-control\"/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"input-group mb-3\">\r\n\t\t\t\t\t\t\t\t <div className=\"input-group-prepend\">\r\n\t\t\t\t\t\t\t\t\t\t<span className=\"input-group-text\" id=\"inputGroup-sizing-sm\">Task</span>\r\n\t\t\t\t\t\t\t\t </div>\r\n\t\t\t\t\t\t\t\t <input\r\n\t\t\t\t\t\t\t\t\t name='text'\r\n\t\t\t\t\t\t\t\t\t onChange={this.onChangeTodoText}\r\n\t\t\t\t\t\t\t\t\t value={this.state.text}\r\n\t\t\t\t\t\t\t\t\t type=\"text\"\r\n\t\t\t\t\t\t\t\t\t className=\"form-control\"/>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t<button type=\"button\"\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => this.setState({text: ''})}\r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{marginRight: \"15px\"}}\r\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"btn btn-danger\">Cancel\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t<button type=\"submit\"\r\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"btn btn-success\">Add Task\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t </div>\r\n\t\t\t\t</form>\r\n\t\t\t);\r\n\t }\r\n}\r\n\r\nexport default connect(null, {addTodo})(CreateTodo)","import {ADD_TODO, REMOVE_TODO, TOGGLE_TODO} from './actionsTypes'\r\n\r\n\r\nexport const addTodo = (todo) => ({type: ADD_TODO, todo});\r\n\r\nexport const deleteTodo = (id) => ({type: REMOVE_TODO, id});\r\n\r\nexport const toggleTodo = (id) => ({type: TOGGLE_TODO, id});","import React, {Component} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {deleteTodo, toggleTodo} from \"../actions/actionCreator\";\r\n\r\nclass Table extends Component {\r\n\r\n\t render() {\r\n\t\t\treturn (\r\n\t\t\t\t<div className=\"col-lg-10 offset-lg-1 col-md-10 col-sm-12 col-xs-12\">\r\n\t\t\t\t\t {this.props.todos.length !== 0 ?\r\n\t\t\t\t\t\t (<table\r\n\t\t\t\t\t\t\t style={{marginTop: \"60px\"}}\r\n\t\t\t\t\t\t\t className=\"table table-hover\"\r\n\t\t\t\t\t\t >\r\n\t\t\t\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t\t\t<tr className='text-center'>\r\n\t\t\t\t\t\t\t\t\t <th scope=\"col\">Email</th>\r\n\t\t\t\t\t\t\t\t\t <th scope=\"col\">Username</th>\r\n\t\t\t\t\t\t\t\t\t <th scope=\"col\">Todos</th>\r\n\t\t\t\t\t\t\t\t\t <th scope=\"col\">Actions</th>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t</thead>\r\n\t\t\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t\t{this.props.todos.map(todo => (\r\n\t\t\t\t\t\t\t\t\t<tr className='text-center' key={todo.id}>\r\n\t\t\t\t\t\t\t\t\t\t <td>{todo.email}</td>\r\n\t\t\t\t\t\t\t\t\t\t <td>{todo.username}</td>\r\n\t\t\t\t\t\t\t\t\t\t <td style={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttextDecoration: todo.completed ? \"line-through\" : \"none\"\r\n\t\t\t\t\t\t\t\t\t\t\t }}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{todo.text} {todo.completed === true ? \"(completed)\" : \"\"}\r\n\t\t\t\t\t\t\t\t\t\t </td>\r\n\t\t\t\t\t\t\t\t\t\t <td>\r\n                    <span\r\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"fas fa-minus-circle\"\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => this.props.deleteTodo(todo.id)}\r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t color: \"black\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t fontSize: \"20pt\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t marginRight: \"20px\"\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"fas fa-check-circle\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => this.props.toggleTodo(todo.id)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{color: \"black\", fontSize: \"20pt\"}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t </td>\r\n\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t\t </table>) :\r\n\t\t\t\t\t\t (<div style={{marginTop: \"50px\"}} className=\"col-lg-10 col-md-10 col-xs-12 col-sm-12 offset-lg-1\">\r\n\t\t\t\t\t\t\t\t<div className=\"alert alert-danger\" role=\"alert\">\r\n\t\t\t\t\t\t\t\t\t Todo List is empty or Filter results show no results\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t </div>)}\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n\t return {\r\n\t\t\ttodos: state.todos\r\n\t }\r\n};\r\n\r\nexport default connect(mapStateToProps, {deleteTodo, toggleTodo})(Table);\r\n","import React, { Component } from 'react'\r\nimport CreateTodo from './containers/CreateTodo'\r\nimport Table from './containers/Table'\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <div className=\"container mx-auto\" style={{ marginTop: \"80px\"}} >\r\n          <div className=\"row\">\r\n            <div className=\"col-lg-10 offset-lg-2 col-md-10 col-sm-12 col-xs-12\">\r\n              <CreateTodo />\r\n            </div>\r\n            <Table />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux'\r\nimport { createStore, applyMiddleware, compose } from 'redux'\r\nimport MainReducer from './reducers/MainReducer'\r\nimport App from './App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\nconst store = createStore(MainReducer)\r\n\r\nReactDOM.render(<Provider store={store}>\r\n<App />\r\n</Provider>\r\n, document.getElementById('root'));\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}