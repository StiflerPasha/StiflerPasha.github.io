{"version":3,"sources":["ava.jpg","components/Navbar/Navbar.module.css","components/Dialogs/DialogItem/DialogItem.module.css","logo.svg","components/Header/Header.module.css","components/Profile/Profile.module.css","components/Profile/UserInfo/UserInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/PostItem/PostItem.module.css","ava_post.jfif","components/News/News.module.css","components/Music/Music.module.css","components/Settings/Settings.module.css","components/Dialogs/Dialogs.module.css","serviceWorker.js","redux/profile_reducer.js","redux/dialogs_reducer.js","redux/sideBar_reducer.js","redux/friends_reducer.js","redux/redux_store.js","components/Header/Header.jsx","components/Profile/UserInfo/UserInfo.jsx","components/Profile/MyPosts/PostItem/PostItem.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/News/News.jsx","components/Music/Music.jsx","components/Settings/Settings.jsx","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx","components/Navbar/Navbar.jsx","components/Navbar/SideBarContainer.jsx","App.js","index.js"],"names":["module","exports","__webpack_require__","p","nav","menu_item","activeLink","fav_friends","dialog_item","active","header","content","info","container","text","dialogs","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","initialState","posts","id","msg","like","newPostText","profileReducer","arguments","length","undefined","action","type","newPost","stateCopy","Object","objectSpread","toConsumableArray","push","newText","messages","newMessagesBody","dialogsReducer","newMsg","body","menu","menuItem","name","sideBarReducer","ava","ava_png","best","friendsReducer","reducers","combineReducers","profilePage","dialogsPage","sideBar","friends","store","createStore","Header","react_default","a","createElement","className","classes","src","imgTest","alt","UserInfo","props","date","city","edu","site","PostItem","ava_post","MyPosts","postsElement","map","MyPosts_PostItem_PostItem","newPostElement","React","createRef","onChange","current","value","updateNewPostText","ref","cols","rows","placeholder","onClick","addPost","MyPostsContainer","connect","dispatch","updateNewPostTextCreator","Profile","Profile_UserInfo_UserInfo","MyPosts_MyPostsContainer","News","Music","Settings","DialogItem","path","react_router_dom","to","activeClassName","Message","Dialogs","dialogsElements","d","Dialogs_DialogItem_DialogItem","messagesElements","m","Dialogs_Message_Message","event","currentTarget","updateNewMessageBody","sendMessage","DialogsContainer","Navbar","menuElement","favFriends","filter","f","SideBarContainer","App","components_Header_Header","Navbar_SideBarContainer","react_router","render","components_Profile_Profile","Dialogs_DialogsContainer","components_News_News","components_Music_Music","components_Settings_Settings","ReactDOM","es","src_App_0","document","getElementById","URL","process","href","origin","addEventListener","concat","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"gFAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,wDCCxCH,EAAAC,QAAA,CAAkBG,IAAA,oBAAAC,UAAA,0BAAAC,WAAA,2BAAAC,YAAA,mDCAlBP,EAAAC,QAAA,CAAkBO,YAAA,gCAAAC,OAAA,iDCDlBT,EAAAC,QAAiBC,EAAAC,EAAuB,kDCCxCH,EAAAC,QAAA,CAAkBS,OAAA,yCCAlBV,EAAAC,QAAA,CAAkBU,QAAA,2CCAlBX,EAAAC,QAAA,CAAkBW,KAAA,yCCAlBZ,EAAAC,QAAA,CAAkBY,UAAA,6CCAlBb,EAAAC,QAAA,CAAkBY,UAAA,8CCDlBb,EAAAC,QAAiBC,EAAAC,EAAuB,uDCCxCH,EAAAC,QAAA,CAAkBa,KAAA,qCCAlBd,EAAAC,QAAA,CAAkBa,KAAA,sCCAlBd,EAAAC,QAAA,CAAkBa,KAAA,yCCAlBd,EAAAC,QAAA,CAAkBc,QAAA,kJCWlB,IAAMC,EAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DAsCN,SAASC,EAAgBC,EAAOC,GAC9BC,UAAUC,cACPC,SAASJ,GACTK,KAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBG,QACfT,UAAUC,cAAcS,YAI1BC,QAAQC,IACN,kHAKEb,GAAUA,EAAOc,UACnBd,EAAOc,SAAST,KAMlBO,QAAQC,IAAI,sCAGRb,GAAUA,EAAOe,WACnBf,EAAOe,UAAUV,UAO5BW,MAAM,SAAAC,GACLL,QAAQK,MAAM,4CAA6CA,iCC7F7DC,EAAe,CACfC,MAAO,CACH,CAACC,GAAI,EAAGC,IAAK,kBAAmBC,KAAM,IACtC,CAACF,GAAI,EAAGC,IAAK,qBAAsBC,KAAM,IAE7CC,YAAa,iBAgCFC,EA7BQ,WAAkC,IAAjCd,EAAiCe,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAzBP,EAAcU,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACrD,OAAQC,EAAOC,MACX,IAbS,WAcL,IAAIC,EAAU,CACVV,GAAIV,EAAMS,MAAMO,OAAS,EACzBL,IAAKX,EAAMa,YACXD,KAAM,GAENS,EAASC,OAAAC,EAAA,EAAAD,CAAA,GAAOtB,GAIpB,OAHAqB,EAAUZ,MAAVa,OAAAE,EAAA,EAAAF,CAAsBtB,EAAMS,OAC5BY,EAAUZ,MAAMgB,KAAKL,GACrBC,EAAUR,YAAc,GACjBQ,EAEX,IAxBqB,uBAyBjB,IAAIA,EAASC,OAAAC,EAAA,EAAAD,CAAA,GAAOtB,GAEpB,OADAqB,EAAUR,YAAcK,EAAOQ,QACxBL,EAEX,QACI,OAAOrB,IC5BfQ,EAAe,CACfmB,SAAU,CACN,CAACjB,GAAI,EAAGC,IAAK,MACb,CAACD,GAAI,EAAGC,IAAK,gBACb,CAACD,GAAI,EAAGC,IAAK,YAEjBiB,gBAAiB,IA8BNC,EA3BQ,WAAkC,IAAjC7B,EAAiCe,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAzBP,EAAcU,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACrD,OAAQC,EAAOC,MACX,IAda,eAeT,IAAIW,EAAS,CACTpB,GAAIV,EAAM2B,SAASX,OAAS,EAC5BL,IAAKX,EAAM4B,iBAEXP,EAASC,OAAAC,EAAA,EAAAD,CAAA,GAAOtB,GAIpB,OAHAqB,EAAUM,SAAVL,OAAAE,EAAA,EAAAF,CAAyBtB,EAAM2B,UAC/BN,EAAUO,gBAAkB,GAC5BP,EAAUM,SAASF,KAAKK,GACjBT,EAEX,IAxBwB,0BAyBpB,IAAIA,EAASC,OAAAC,EAAA,EAAAD,CAAA,GAAOtB,GAEpB,OADAqB,EAAUO,gBAAkBV,EAAOa,KAC5BV,EAEX,QACI,OAAOrB,IC/BfQ,EAAe,CACfwB,KAAM,CACF,CAACtB,GAAI,EAAGuB,SAAU,WAAYC,KAAM,WACpC,CAACxB,GAAI,EAAGuB,SAAU,WAAYC,KAAM,YACpC,CAACxB,GAAI,EAAGuB,SAAU,QAASC,KAAM,QACjC,CAACxB,GAAI,EAAGuB,SAAU,SAAUC,KAAM,SAClC,CAACxB,GAAI,EAAGuB,SAAU,YAAaC,KAAM,YACrC,CAACxB,GAAI,EAAGuB,SAAU,QAASC,KAAM,eAS1BC,EALQ,WAAkC,IAAjCnC,EAAiCe,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAzBP,EAAyBO,UAAAC,OAAA,GAAAD,UAAA,GAErD,OAAOf,mBCXPQ,EAAe,CACf,CAACE,GAAI,EAAGwB,KAAM,QAASE,IAAKC,IAASC,MAAM,GAC3C,CAAC5B,GAAI,EAAGwB,KAAM,SAAUE,IAAKC,IAASC,MAAM,GAC5C,CAAC5B,GAAI,EAAGwB,KAAM,OAAQE,IAAKC,IAASC,MAAM,GAC1C,CAAC5B,GAAI,EAAGwB,KAAM,QAASE,IAAKC,IAASC,MAAM,GAC3C,CAAC5B,GAAI,EAAGwB,KAAM,QAASE,IAAKC,IAASC,MAAM,GAC3C,CAAC5B,GAAI,EAAGwB,KAAM,SAAUE,IAAKC,IAASC,MAAM,GAC5C,CAAC5B,GAAI,EAAGwB,KAAM,OAAQE,IAAKC,IAASC,MAAM,IAQ/BC,EALQ,WAAkC,IAAjCvC,EAAiCe,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAzBP,EAAyBO,UAAAC,OAAA,GAAAD,UAAA,GAErD,OAAOf,GCRPwC,EAAWC,YAAgB,CAC3BC,YAAa5B,EACb6B,YAAad,EACbe,QAAST,EACTU,QAASN,IAKEO,EAFHC,YAAYP,qFCDTQ,EARA,WACX,OACIC,EAAAC,EAAAC,cAAA,UAAQC,UAAWC,IAAQ7E,QACvByE,EAAAC,EAAAC,cAAA,OAAKG,IAAKC,IAASC,IAAI,6CCiBpBC,EApBE,SAACC,GAEd,OACIT,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAQ3E,MACpBuE,EAAAC,EAAAC,cAAA,OAAKG,IAJJ,wEAIiBE,IAAI,WACtBP,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,mBAAWO,EAAMxB,MAEjBe,EAAAC,EAAAC,cAAA,6BAAqBO,EAAMC,MAC3BV,EAAAC,EAAAC,cAAA,oBAAYO,EAAME,MAClBX,EAAAC,EAAAC,cAAA,yBAAiBO,EAAMG,KACvBZ,EAAAC,EAAAC,cAAA,wBAAgBO,EAAMI,6DCG3BC,EAdE,SAACL,GACd,OACIT,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAQ1E,WACpBsE,EAAAC,EAAAC,cAAA,OACIG,IAAKU,IACLR,IAAI,QACPE,EAAM/C,IACPsC,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,oBAAYO,EAAM9C,SCsBnBqD,EA9BC,SAACP,GACb,IAAIQ,EACAR,EAAMjD,MAAM0D,IAAI,SAAAlG,GAAC,OAAIgF,EAAAC,EAAAC,cAACiB,EAAD,CAAUzD,IAAK1C,EAAE0C,IAAKC,KAAM3C,EAAE2C,SAEnDyD,EAAiBC,IAAMC,YAW3B,OACItB,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAQ1E,WACpBsE,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,YAAUqB,SARC,WACf,IAAI5F,EAAOyF,EAAeI,QAAQC,MAClChB,EAAMiB,kBAAkB/F,IAOVgG,IAAKP,EACLQ,KAAK,KACLC,KAAK,IACLC,YAAY,OACZL,MAAOhB,EAAM7C,cACvBoC,EAAAC,EAAAC,cAAA,UAAQ6B,QAlBA,WACZtB,EAAMuB,YAiBF,YACCf,WCJEgB,EAFUC,YAnBD,SAACnF,GACrB,MAAO,CACHS,MAAOT,EAAM0C,YAAYjC,MACzBI,YAAab,EAAM0C,YAAY7B,cAIZ,SAACuE,GACxB,MAAO,CACHT,kBAAmB,SAAC/F,GAChB,IAAIsC,ETsBwB,SAACtC,GAAD,MACnC,CAACuC,KArCuB,uBAqCKO,QAAS9C,GSvBlByG,CAAyBzG,GACtCwG,EAASlE,IAEb+D,QAAS,WACLG,ETgByB,CAACjE,KAnCrB,gBSwBQgE,CAA6ClB,GCJvDqB,EAdC,SAAC5B,GACb,OACIT,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAQ5E,SACpBwE,EAAAC,EAAAC,cAACoC,EAAD,CACIrD,KAAK,QACLyB,KAAK,aACLC,KAAK,SACLC,IAAI,OACJC,KAAK,WACTb,EAAAC,EAAAC,cAACqC,EAAD,CAAkB1C,MAAOY,EAAMZ,2BCJ5B2C,EARF,SAAC/B,GACV,OACIT,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,KAAGC,UAAWC,IAAQzE,MAAtB,2BCKG8G,EARD,SAAChC,GACX,OACIT,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,KAAGC,UAAWC,IAAQzE,MAAtB,4BCKG+G,GARE,SAACjC,GACd,OACIT,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,KAAGC,UAAWC,IAAQzE,MAAtB,8DCaGgH,GAfI,SAAClC,GAChB,IAAImC,EAAO,YAAcnC,EAAMhD,GAE/B,OACIuC,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,KAAQ/E,aACpB2E,EAAAC,EAAAC,cAAA,OAAKG,IAAKI,EAAMtB,IAAKoB,IAAI,KACzBP,EAAAC,EAAAC,cAAC2C,EAAA,EAAD,CACIC,GAAIF,EACJG,gBAAiB3C,KAAQ9E,QAC3BmF,EAAMxB,4BCFL+D,GARC,SAACvC,GACb,OACIT,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,KAAQ1B,UACtB+B,EAAM/C,MCuCDuF,GAxCC,SAACxC,GAEb,IAAIyC,EAAkBzC,EAAMb,QACvBsB,IAAI,SAAAiC,GAAC,OAAInD,EAAAC,EAAAC,cAACkD,GAAD,CAAY3F,GAAI0F,EAAE1F,GAAIwB,KAAMkE,EAAElE,KAAME,IAAKgE,EAAEhE,QACrDkE,EAAmB5C,EAAM/B,SACxBwC,IAAI,SAAAoC,GAAC,OAAItD,EAAAC,EAAAC,cAACqD,GAAD,CAAS7F,IAAK4F,EAAE5F,QAW9B,OACIsC,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,KAAQxE,SACpBoE,EAAAC,EAAAC,cAAA,WACKgD,GAELlD,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,WAAMmD,GACNrD,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,YACIqB,SAfC,SAACiC,GACtB,IAAI1E,EAAO0E,EAAMC,cAAchC,MAC/BhB,EAAMiD,qBAAqB5E,IAcPgD,YAAY,qBACZL,MAAOhB,EAAM9B,mBAGrBqB,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,UAAQ6B,QAzBH,WACrBtB,EAAMkD,gBAwBU,aCZTC,GAFU1B,YAnBD,SAACnF,GACrB,MAAO,CACH6C,QAAS7C,EAAM6C,QACflB,SAAU3B,EAAM2C,YAAYhB,SAC5BC,gBAAiB5B,EAAM2C,YAAYf,kBAIhB,SAACwD,GACxB,MAAO,CACHuB,qBAAsB,SAAC5E,GACnBqD,EhBsBP,CAACjE,KApC0B,0BAoCKY,KgBtBYA,KAEzC6E,YAAa,WACTxB,EhBiB6B,CAACjE,KAnCrB,oBgBuBIgE,CAA6Ce,wBCavDY,GAhCA,SAACpD,GACZ,IAAIqD,EAAcrD,EAAM1B,KAAKmC,IAAI,SAAAoC,GAAC,OAC9BtD,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,KAAQlF,WACpB8E,EAAAC,EAAAC,cAAC2C,EAAA,EAAD,CACIC,GAAIQ,EAAEtE,SACN+D,gBAAiB3C,KAAQjF,YAC3BmI,EAAErE,SAIR8E,EAAatD,EAAMb,QAClBoE,OAAO,SAAAC,GAAC,OAAIA,EAAE5E,OACd6B,IAAI,SAAA+C,GAAC,OACNjE,EAAAC,EAAAC,cAAA,cACIF,EAAAC,EAAAC,cAAA,OAAKG,IAAK4D,EAAE9E,IAAKoB,IAAI,QACrBP,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,kBAAa+D,EAAEhF,SAGvB,OACIe,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,KAAQnF,KACpB+E,EAAAC,EAAAC,cAAA,WACK4D,GAEL9D,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,KAAQhF,aACnB2I,KCdFG,GAFUhC,YAXD,SAACnF,GACrB,MAAO,CACHgC,KAAMhC,EAAM4C,QAAQZ,KACpBa,QAAS7C,EAAM6C,UAII,SAACuC,GACxB,MAAO,IAGcD,CAA6C2B,ICkBvDM,GApBH,SAAC1D,GACT,OACIT,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAACkE,EAAD,MACApE,EAAAC,EAAAC,cAACmE,GAAD,CAAkBxE,MAAOY,EAAMZ,QAC/BG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACXH,EAAAC,EAAAC,cAACoE,GAAA,EAAD,CAAO1B,KAAK,WACL2B,OAAQ,kBACJvE,EAAAC,EAAAC,cAACsE,EAAD,CAAS3E,MAAOY,EAAMZ,WACjCG,EAAAC,EAAAC,cAACoE,GAAA,EAAD,CAAO1B,KAAK,WACL2B,OAAQ,kBACJvE,EAAAC,EAAAC,cAACuE,GAAD,CAAkB5E,MAAOY,EAAMZ,WAC1CG,EAAAC,EAAAC,cAACoE,GAAA,EAAD,CAAO1B,KAAK,QAAQ2B,OAAQ,kBAAMvE,EAAAC,EAAAC,cAACwE,EAAD,SAClC1E,EAAAC,EAAAC,cAACoE,GAAA,EAAD,CAAO1B,KAAK,SAAS2B,OAAQ,kBAAMvE,EAAAC,EAAAC,cAACyE,EAAD,SACnC3E,EAAAC,EAAAC,cAACoE,GAAA,EAAD,CAAO1B,KAAK,YAAY2B,OAAQ,kBAAMvE,EAAAC,EAAAC,cAAC0E,GAAD,YCjBtDC,IAASN,OACLvE,EAAAC,EAAAC,cAAC2C,EAAA,EAAD,KACI7C,EAAAC,EAAAC,cAAC4E,EAAA,EAAD,CAAUjF,MAAOA,GACbG,EAAAC,EAAAC,cAAC6E,GAAD,QAEUC,SAASC,eAAe,StBQvC,SAAkB5I,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAI4I,IAAIC,GAAwBpJ,OAAOC,SAASoJ,MACpDC,SAAWtJ,OAAOC,SAASqJ,OAIvC,OAGFtJ,OAAOuJ,iBAAiB,OAAQ,WAC9B,IAAMlJ,EAAK,GAAAmJ,OAAMJ,GAAN,sBAEPtJ,GAgEV,SAAiCO,EAAOC,GAEtCmJ,MAAMpJ,GACHK,KAAK,SAAAgJ,GAEJ,IAAMC,EAAcD,EAASE,QAAQC,IAAI,gBAEnB,MAApBH,EAASI,QACO,MAAfH,IAA8D,IAAvCA,EAAYI,QAAQ,cAG5CxJ,UAAUC,cAAcwJ,MAAMtJ,KAAK,SAAAC,GACjCA,EAAasJ,aAAavJ,KAAK,WAC7BV,OAAOC,SAASiK,aAKpB9J,EAAgBC,EAAOC,KAG1BgB,MAAM,WACLJ,QAAQC,IACN,mEArFAgJ,CAAwB9J,EAAOC,GAI/BC,UAAUC,cAAcwJ,MAAMtJ,KAAK,WACjCQ,QAAQC,IACN,gHAMJf,EAAgBC,EAAOC,MsB9B/BE","file":"static/js/main.53da92b7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/ava.087aca2e.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__2VtaC\",\"menu_item\":\"Navbar_menu_item__Ji-gT\",\"activeLink\":\"Navbar_activeLink__2-dOH\",\"fav_friends\":\"Navbar_fav_friends__3Syvl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog_item\":\"DialogItem_dialog_item__Plztm\",\"active\":\"DialogItem_active__3Rfx1\"};","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2FKe8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Profile_content__1dTSn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"info\":\"UserInfo_info__1eyaO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"MyPosts_container__1IBUw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"PostItem_container__Prsg4\"};","module.exports = __webpack_public_path__ + \"static/media/ava_post.85001c30.jfif\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"News_text__oKN1W\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"Music_text__2lFaw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"Settings_text__1DlPk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__kqk-n\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'News content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const ADD_POST = \"ADD-POST\";\r\nconst UPDATE_NEW_POST_TEXT = \"UPDATE-NEW-POST-TEXT\";\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, msg: \"Hi, how are you\", like: 12},\r\n        {id: 2, msg: \"It's my first post\", like: 5},\r\n    ],\r\n    newPostText: \"Pasha Stifler\"\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: state.posts.length + 1,\r\n                msg: state.newPostText,\r\n                like: 0,\r\n            };\r\n            let stateCopy = {...state};\r\n            stateCopy.posts = [...state.posts];\r\n            stateCopy.posts.push(newPost);\r\n            stateCopy.newPostText = '';\r\n            return stateCopy;\r\n        }\r\n        case UPDATE_NEW_POST_TEXT: {\r\n            let stateCopy = {...state};\r\n            stateCopy.newPostText = action.newText;\r\n            return stateCopy;\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const addPostCreator = () => ({type: ADD_POST});\r\n\r\nexport const updateNewPostTextCreator = (text) =>\r\n    ({type: UPDATE_NEW_POST_TEXT, newText: text});\r\n\r\nexport default profileReducer;","const SEND_MESSAGE = \"SEND_MESSAGE\";\r\nconst UPDATE_NEW_MESSAGE_BODY = \"UPDATE_NEW_MESSAGE_BODY\";\r\n\r\nlet initialState = {\r\n    messages: [\r\n        {id: 1, msg: \"Hi\"},\r\n        {id: 2, msg: \"How are you?\"},\r\n        {id: 3, msg: \"Yo man!\"},\r\n    ],\r\n    newMessagesBody: \"\",\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SEND_MESSAGE: {\r\n            let newMsg = {\r\n                id: state.messages.length + 1,\r\n                msg: state.newMessagesBody\r\n            };\r\n            let stateCopy = {...state};\r\n            stateCopy.messages = [...state.messages];\r\n            stateCopy.newMessagesBody = \"\";\r\n            stateCopy.messages.push(newMsg);\r\n            return stateCopy;\r\n        }\r\n        case UPDATE_NEW_MESSAGE_BODY: {\r\n            let stateCopy = {...state};\r\n            stateCopy.newMessagesBody = action.body;\r\n            return stateCopy;\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const sendMessageCreator = () => ({type: SEND_MESSAGE});\r\nexport const updateNewMessageBodyCreator = (text) =>\r\n    ({type: UPDATE_NEW_MESSAGE_BODY, body: text});\r\n\r\nexport default dialogsReducer;","let initialState = {\r\n    menu: [\r\n        {id: 1, menuItem: \"/profile\", name: \"Profile\"},\r\n        {id: 2, menuItem: \"/dialogs\", name: \"Messages\"},\r\n        {id: 3, menuItem: \"/news\", name: \"News\"},\r\n        {id: 4, menuItem: \"/music\", name: \"Music\"},\r\n        {id: 5, menuItem: \"/settings\", name: \"Settings\"},\r\n        {id: 6, menuItem: \"/test\", name: \"It's work\"},\r\n    ],\r\n};\r\n\r\nconst sideBarReducer = (state = initialState, action) => {\r\n\r\n    return state\r\n};\r\n\r\nexport default sideBarReducer;","import ava_png from \"../ava.jpg\";\r\n\r\nlet initialState = [\r\n    {id: 1, name: \"Pasha\", ava: ava_png, best: true},\r\n    {id: 2, name: \"Andrey\", ava: ava_png, best: false},\r\n    {id: 3, name: \"John\", ava: ava_png, best: false},\r\n    {id: 4, name: \"Sasha\", ava: ava_png, best: false},\r\n    {id: 5, name: \"Smith\", ava: ava_png, best: true},\r\n    {id: 6, name: \"Valera\", ava: ava_png, best: false},\r\n    {id: 7, name: \"Yana\", ava: ava_png, best: true},\r\n];\r\n\r\nconst friendsReducer = (state = initialState, action) => {\r\n\r\n    return state\r\n};\r\n\r\nexport default friendsReducer","import {combineReducers, createStore} from \"redux\";\r\nimport profileReducer from \"./profile_reducer\";\r\nimport dialogsReducer from \"./dialogs_reducer\";\r\nimport sideBarReducer from \"./sideBar_reducer\";\r\nimport friendsReducer from \"./friends_reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sideBar: sideBarReducer,\r\n    friends: friendsReducer\r\n});\r\n\r\nlet store = createStore(reducers);\r\n\r\nexport default store;","import React from 'react';\r\nimport imgTest from '../../logo.svg';\r\nimport classes from './Header.module.css';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header className={classes.header}>\r\n            <img src={imgTest} alt=\"logo\" />\r\n        </header>\r\n    );\r\n};\r\n\r\nexport default Header","import React from 'react';\r\nimport classes from './UserInfo.module.css'\r\n\r\n\r\nconst UserInfo = (props) => {\r\n    let avatar = \"https://whatsism.com/uploads/posts/2018-07/1530544023_n6fgwzftnvg.jpg\";\r\n    return (\r\n        <div>\r\n            <div className={classes.info}>\r\n                <img src={avatar} alt=\"avatar\"/>\r\n                <div>\r\n                    <h2>Name: {props.name}</h2>\r\n\r\n                    <div>Date of birth: {props.date}</div>\r\n                    <div>City: {props.city}</div>\r\n                    <div>Education: {props.edu}</div>\r\n                    <div>Web Site: {props.site}</div>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UserInfo","import React from 'react';\r\nimport classes from './PostItem.module.css'\r\nimport ava_post from '../../../../ava_post.jfif'\r\n\r\n\r\nconst PostItem = (props) => {\r\n    return (\r\n        <div className={classes.container}>\r\n            <img\r\n                src={ava_post}\r\n                alt=\"ava\"/>\r\n            {props.msg}\r\n            <div>\r\n                <span>Like {props.like}</span>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PostItem","import React from 'react';\r\nimport classes from './MyPosts.module.css'\r\nimport PostItem from './PostItem/PostItem';\r\n\r\n\r\nconst MyPosts = (props) => {\r\n    let postsElement =\r\n        props.posts.map(p => <PostItem msg={p.msg} like={p.like}/>);\r\n\r\n    let newPostElement = React.createRef();\r\n\r\n    let onAddPost = () => {\r\n        props.addPost();\r\n    };\r\n\r\n    let onPostChange = () => {\r\n        let text = newPostElement.current.value;\r\n        props.updateNewPostText(text);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.container}>\r\n            <h3>My Posts</h3>\r\n            <textarea onChange={onPostChange}\r\n                      ref={newPostElement}\r\n                      cols=\"50\"\r\n                      rows=\"3\"\r\n                      placeholder=\"Text\"\r\n                      value={props.newPostText}/>\r\n            <button onClick={onAddPost}>Add post</button>\r\n            {postsElement}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MyPosts","import {addPostCreator, updateNewPostTextCreator} from \"../../../redux/profile_reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText,\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        updateNewPostText: (text) => {\r\n            let action = updateNewPostTextCreator(text);\r\n            dispatch(action);\r\n        },\r\n        addPost: () => {\r\n            dispatch(addPostCreator());\r\n        }\r\n    }\r\n};\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer","import React from 'react';\r\nimport classes from './Profile.module.css'\r\nimport UserInfo from './UserInfo/UserInfo';\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div className={classes.content}>\r\n            <UserInfo\r\n                name=\"Pasha\"\r\n                date=\"11.07.1992\"\r\n                city=\"Moscow\"\r\n                edu=\"DITB\"\r\n                site=\"--//--\" />\r\n            <MyPostsContainer store={props.store}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Profile","import React from \"react\";\r\nimport classes from \"./News.module.css\"\r\n\r\nconst News = (props) => {\r\n    return (\r\n        <div>\r\n            <p className={classes.text}>News</p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default News;","import React from \"react\";\r\nimport classes from \"./Music.module.css\"\r\n\r\nconst Music = (props) => {\r\n    return (\r\n        <div>\r\n            <p className={classes.text}>Music</p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Music;","import React from \"react\";\r\nimport classes from \"./Settings.module.css\"\r\n\r\nconst Settings = (props) => {\r\n    return (\r\n        <div>\r\n            <p className={classes.text}>Settings</p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Settings;","import {NavLink} from \"react-router-dom\";\r\nimport classes from \"./DialogItem.module.css\";\r\nimport React from \"react\";\r\n\r\nconst DialogItem = (props) => {\r\n    let path = \"/dialogs/\" + props.id;\r\n\r\n    return (\r\n        <div className={classes.dialog_item}>\r\n            <img src={props.ava} alt=\"\"/>\r\n            <NavLink\r\n                to={path}\r\n                activeClassName={classes.active}\r\n            >{props.name}\r\n            </NavLink>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DialogItem;","import classes from \"./Message.module.css\";\r\nimport React from \"react\";\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={classes.messages}\r\n        >{props.msg}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Message;","import React from \"react\";\r\nimport classes from \"./Dialogs.module.css\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\"\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let dialogsElements = props.friends\r\n        .map(d => <DialogItem id={d.id} name={d.name} ava={d.ava}/>);\r\n    let messagesElements = props.messages\r\n        .map(m => <Message msg={m.msg}/>);\r\n\r\n    let onSendMessageClick = () => {\r\n        props.sendMessage();\r\n    };\r\n\r\n    let onNewMessageChange = (event) => {\r\n        let body = event.currentTarget.value;\r\n        props.updateNewMessageBody(body);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.dialogs}>\r\n            <div>\r\n                {dialogsElements}\r\n            </div>\r\n            <div>\r\n                <div>{messagesElements}</div>\r\n                <div>\r\n                    <div>\r\n                        <textarea\r\n                            onChange={onNewMessageChange}\r\n                            placeholder=\"Enter your message\"\r\n                            value={props.newMessagesBody}>\r\n                        </textarea>\r\n                    </div>\r\n                    <div>\r\n                        <button onClick={onSendMessageClick}>Send</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Dialogs;","import {sendMessageCreator, updateNewMessageBodyCreator} from \"../../redux/dialogs_reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        friends: state.friends,\r\n        messages: state.dialogsPage.messages,\r\n        newMessagesBody: state.dialogsPage.newMessagesBody,\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        updateNewMessageBody: (body) => {\r\n            dispatch(updateNewMessageBodyCreator(body))\r\n        },\r\n        sendMessage: () => {\r\n            dispatch(sendMessageCreator());\r\n        }\r\n    }\r\n};\r\n\r\nconst DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(Dialogs);\r\n\r\nexport default DialogsContainer;","import React from 'react';\r\nimport classes from './Navbar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Navbar = (props) => {\r\n    let menuElement = props.menu.map(m =>\r\n        <div className={classes.menu_item}>\r\n            <NavLink\r\n                to={m.menuItem}\r\n                activeClassName={classes.activeLink}\r\n            >{m.name}\r\n            </NavLink>\r\n        </div>);\r\n\r\n    let favFriends = props.friends\r\n        .filter(f => f.best)\r\n        .map(f =>\r\n        <figure>\r\n            <img src={f.ava} alt=\"ava\"/>\r\n            <br/>\r\n            <figcaption>{f.name}</figcaption>\r\n        </figure>);\r\n\r\n    return (\r\n        <div className={classes.nav}>\r\n            <div>\r\n                {menuElement}\r\n            </div>\r\n            <h2>Friends</h2>\r\n            <div className={classes.fav_friends}>\r\n                {favFriends}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Navbar","import {connect} from \"react-redux\";\r\nimport Navbar from \"./Navbar\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        menu: state.sideBar.menu,\r\n        friends: state.friends,\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {}\r\n};\r\n\r\nconst SideBarContainer = connect(mapStateToProps, mapDispatchToProps)(Navbar);\r\n\r\nexport default SideBarContainer;","import React from 'react';\r\nimport './App.css';\r\nimport Header from './components/Header/Header';\r\nimport Profile from './components/Profile/Profile';\r\nimport News from \"./components/News/News\";\r\nimport Music from \"./components/Music/Music\";\r\nimport Settings from \"./components/Settings/Settings\";\r\nimport {Route} from \"react-router-dom\";\r\nimport DialogsContainer from \"./components/Dialogs/DialogsContainer\";\r\nimport SideBarContainer from \"./components/Navbar/SideBarContainer\";\r\n\r\n\r\nconst App = (props) => {\r\n    return (\r\n        <div className='app-wrapper'>\r\n            <Header/>\r\n            <SideBarContainer store={props.store}/>\r\n            <div className='app-wrapper-content'>\r\n                <Route path='/profile'\r\n                       render={() =>\r\n                           <Profile store={props.store}/>}/>\r\n                <Route path='/dialogs'\r\n                       render={() =>\r\n                           <DialogsContainer store={props.store}/>}/>\r\n                <Route path='/news' render={() => <News/>}/>\r\n                <Route path='/music' render={() => <Music/>}/>\r\n                <Route path='/settings' render={() => <Settings/>}/>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App;","import * as serviceWorker from './serviceWorker';\r\nimport store from \"./redux/redux_store\";\r\nimport ReactDOM from \"react-dom\";\r\nimport {BrowserRouter} from \"react-router-dom\";\r\nimport App from \"./App\";\r\nimport React from \"react\";\r\nimport {Provider} from \"react-redux\";\r\n\r\n\r\nReactDOM.render(\r\n    <BrowserRouter>\r\n        <Provider store={store}>\r\n            <App/>\r\n        </Provider>\r\n    </BrowserRouter>, document.getElementById('root'));\r\n\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();"],"sourceRoot":""}